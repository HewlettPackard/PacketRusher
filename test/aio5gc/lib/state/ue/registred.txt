package ueState

import (
	"fmt"
	"my5G-RANTester/test/aio5gc/context"
	nasHandler "my5G-RANTester/test/aio5gc/msg/nas/handler"

	"github.com/free5gc/nas"
	log "github.com/sirupsen/logrus"
)

type Registred struct{}

func (r *Registred) AuthenticationResponse(*nas.Message, *context.GNBContext, *context.UEContext, *context.Aio5gc) error {
	return fmt.Errorf("[5GC][NAS] Unexpected message: received AuthenticationResponse for Registred UE")
}
func (r *Registred) RegistrationComplete(*nas.Message, *context.GNBContext, *context.UEContext, *context.Aio5gc) error {
	return fmt.Errorf("[5GC][NAS] Unexpected message: received RegistrationComplete for Registred UE")
}
func (r *Registred) RegistrationRequest(msg *nas.Message, ueContext *context.UEContext, gnb *context.GNBContext, fgc *context.Aio5gc) error {
	log.Warn("[5GC][NAS] Unexpected message: received RegistrationRequest for Registred UE")
	//TODO: Send to succesful RegRequest part
	return nasHandler.RegistrationRequest(msg, ueContext, gnb, fgc)
}
func (r *Registred) SecurityModeComplete(msg *nas.Message, ueContext *context.UEContext, gnb *context.GNBContext, fgc *context.Aio5gc) error {
	return fmt.Errorf("[5GC][NAS] Unexpected message: received SecurityModeComplete for Registred UE")
}
func (r *Registred) UEOriginatingDeregistration(msg *nas.Message, ueContext *context.UEContext, gnb *context.GNBContext, fgc *context.Aio5gc) error {
	return nasHandler.UEOriginatingDeregistration(msg, ueContext, gnb, fgc)
}
func (r *Registred) UlNasTransport(msg *nas.Message, gnb *context.GNBContext, ueContext *context.UEContext, sm *context.SessionContext) error {
	return nasHandler.UlNasTransport(msg, gnb, ueContext, sm)
}
func (r *Registred) ToString() string {
	return "Registred"
}
